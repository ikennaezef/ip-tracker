{"version":3,"sources":["components/styles/Globals.js","components/styles/Background.styled.js","components/styles/InfoContainer.styled.js","components/InfoContainer.js","components/Background.js","components/styles/Map.styled.js","components/Map.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","colors","text","mobile","StyledBackground","styled","div","InputBox","StyledInfoContainer","lightText","tablet","Line","span","InfoContainer","ipData","useContext","TrackerContext","ip","location","city","country","geonameId","timezone","isp","Background","setIpData","ipQuery","setIpQuery","useState","getIp","async","fetch","then","res","json","data","catch","err","console","log","useEffect","type","placeholder","onChange","e","target","value","onClick","src","alt","StyledMap","Map","createContext","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAEO,MAAMA,EAAeC,YAAH,ubAUd,QAAC,MAACC,GAAF,SAAaA,EAAMC,OAAOC,QAMJ,QAAC,MAAEF,GAAH,SAAeA,EAAMG,U,QChB/C,MAAMC,EAAmBC,IAAOC,IAAV,uYAcI,QAAC,MAAEN,GAAH,SAAeA,EAAMG,UAOzCI,EAAWF,IAAOC,IAAV,+wBAuCY,QAAC,MAAEN,GAAH,SAAeA,EAAMG,U,QC5D/C,MAAMK,EAAsBH,IAAOC,IAAV,m+BAoBpB,QAAC,MAAEN,GAAH,SAAeA,EAAMC,OAAOQ,aAYP,QAAC,MAAET,GAAH,SAAeA,EAAMU,UAOrB,QAAC,MAAEV,GAAH,SAAeA,EAAMG,UAqBzCQ,EAAON,IAAOO,KAAV,+JAMgB,QAAC,MAAEZ,GAAH,SAAeA,EAAMG,U,WClCvCU,MA9BO,KAErB,MAAM,OAAEC,GAAWC,qBAAWC,GAE9B,OACC,eAACR,EAAD,WACC,gCACC,8CACA,4BAAKM,EAAOG,QAEb,cAACN,EAAD,IACA,gCACC,4CACA,8BAAKG,EAAOI,SAASC,KAArB,KAA+BL,EAAOI,SAASE,WAC/C,4BAAKN,EAAOI,SAASG,eAEtB,cAACV,EAAD,IACA,gCACC,6CACA,qCAASG,EAAOI,SAASI,eAE1B,cAACX,EAAD,IACA,gCACC,uCACA,4BAAKG,EAAOS,aCuBDC,I,EAAAA,EA9CI,KAElB,MAAM,OAAEV,EAAF,UAAUW,GAAcV,qBAAWC,IAEjCU,EAASC,GAAeC,mBAAS,IAKnCC,EAAQC,gBACPC,MAAM,gGAAgGC,MAAKC,GAAOA,EAAIC,SAAQF,MAAKG,IACxIV,EAAUU,MACRC,OAAMC,GAAOC,QAAQC,IAAIF,MAoB7B,OALAG,qBAAU,KACTX,MACE,IAIF,eAACzB,EAAD,WACC,oDACA,eAACG,EAAD,WACC,uBAAOkC,KAAK,OAAOC,YAAY,sCAAsCC,SAAYC,GAAMjB,EAAWiB,EAAEC,OAAOC,SAC3G,sBAAMC,QAtBQjB,UAEA,MAAZJ,EACHG,UAEME,MAAM,+FAAD,OAAgGL,IAAWM,MAAKC,GAAOA,EAAIC,SAAQF,MAAKG,IAClJV,EAAUU,MACRC,OAAMC,GAAOC,QAAQC,IAAIF,MAe3B,SACC,qBAAKW,IAAI,wBAAwBC,IAAI,oBAG7BnC,GAAU,cAAC,EAAD,QC5ChB,MAAMoC,EAAY7C,IAAOC,IAAV,qKCSP6C,MATH,IAGV,cAACD,EAAD,UACC,qBAAKF,IAAI,iBAAiBC,IAAI,UCGlBjD,MATD,CACZC,OAAQ,CACNC,KAAM,kBACNO,UAAW,mBAEbN,OAAQ,QACRO,OAAQ,SCEH,MAAMM,EAAiBoC,wBAAc,MAoB7BC,MAjBf,WAEE,MAAOvC,EAAQW,GAAaG,mBAAS,MAErC,OACE,cAACZ,EAAesC,SAAhB,CAAyBR,MAAS,CAAEhC,SAAQW,aAA5C,SACE,cAAC,IAAD,CAAezB,MAASA,EAAxB,SACE,qCACE,cAACF,EAAD,IACA,cAAC,EAAD,IACEgB,GAAU,cAAC,EAAD,YCTPyC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,IAAkD,IAAjD,OAAE0B,EAAF,OAAUC,EAAV,OAAkBC,EAAlB,OAA0BC,EAA1B,QAAkCC,GAAc,EACzEJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e25300e3.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\t* {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\tbox-sizing: border-box;\r\n\t\tmax-width: 100%;\r\n\t\ttransition: 0.3s ease;\r\n\t}\r\n\r\n\tbody {\r\n\t\tcolor: ${({theme}) => theme.colors.text};\r\n\t\tfont-family: 'Rubik', sans-serif;\r\n\t\toverflow-x: hidden;\r\n\t}\r\n\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.mobile}) {\r\n\r\n\t\thtml {\r\n\t\t\tfont-size: 80%;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t@media screen and (min-width:1500px) {\r\n\t\thtml {\r\n\t\t\tfont-size: 120%;\r\n\t\t}\r\n\t}\r\n\r\n`;","import styled from 'styled-components';\r\n\r\nexport const StyledBackground = styled.div`\r\n\tpadding: 2rem 7% 6rem;\r\n\tbackground: url('./images/pattern-bg.png') no-repeat center center/cover;\r\n\tbox-shadow: 0 3px 5px rgba(0, 0, 0, 0.3);\r\n\ttext-align: center;\r\n\theight: 35vh;\r\n\r\n\th1 {\r\n\t\tcolor: #fff;\r\n\t\tmargin-bottom: 2rem;\r\n\t\tfont-size: 2rem;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.mobile}) {\r\n\r\n\t\tpadding: 2rem;\r\n\r\n\t}\r\n`;\r\n\r\nexport const InputBox = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tborder-radius: 0.8rem;\r\n\tbackground: #fff;\r\n\twidth: 60%;\r\n\tmargin: 0 auto;\r\n\tmargin-bottom: 1rem;\r\n\r\n\r\n\tinput {\r\n\t\tpadding: 0.8rem 1.5rem;\r\n\t\tfont-family: inherit;\r\n\t\tfont-size: 1.1rem;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 10px 0 0 10px;\r\n\t\tborder: none;\r\n\t\toutline: none;\r\n\t}\r\n\r\n\tspan {\r\n\t\tbackground-color: #000;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 0.6rem 1.2rem;\r\n\t\tborder-radius: 0 10px 10px 0;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\tspan:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\tspan img {\r\n\t\twidth: 8px;\r\n\t}\r\n\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.mobile}) {\r\n\r\n\t\twidth: 100%;\r\n\r\n\t\tinput {\r\n\t\t\tpadding: 0.6rem 1.2rem;\r\n\t\t}\r\n\r\n\t}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledInfoContainer = styled.div`\r\n\tbackground-color: #fff;\r\n\tborder-radius: 0.8rem;\r\n\tbox-shadow: 0 0 0.2rem rgba(0, 0, 0, 0.2);\r\n\tpadding: 2rem 1rem;\r\n\twidth: 90%;\r\n\tmax-width: 55rem;\r\n\tmargin: 0 auto;\r\n\ttransform: translateY(25%);\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\r\n\t& > div {\r\n\t\tpadding: 0 1.5rem;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: flex-start;\r\n\t\tflex: 1;\r\n\r\n\t\tspan {\r\n\t\t\tcolor: ${({ theme }) => theme.colors.lightText};\r\n\t\t\tfont-size: 0.6rem;\r\n\t\t\tmargin-bottom: 0.8rem;\r\n\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tfont-size: 1.3rem;\r\n\t\tfont-weight: 500;\r\n\t\ttext-align: left;\r\n\t}\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.tablet}) {\r\n\r\n\t\ttransform: translateY(10%);\r\n\t\twidth: 100%;\r\n\r\n\t}\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.mobile}) {\r\n\r\n\t\twidth: 95%;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\ttext-align: center;\r\n\t\tgap: 2rem;\r\n\t\ttransform: translateY(0);\r\n\r\n\r\n\t\t& > div {\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\r\n\t\tp {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\r\n\t}\r\n`;\r\n\r\nexport const Line = styled.span`\r\n\tbackground-color: #ddd;\r\n\twidth: 0.1rem;\r\n\theight: 4rem;\r\n\r\n\r\n\t@media screen and (max-width: ${({ theme }) => theme.mobile}) {\r\n\t\tdisplay: none;\r\n\t}\r\n`;","import { StyledInfoContainer, Line } from './styles/InfoContainer.styled';\r\nimport { useContext } from 'react';\r\nimport { TrackerContext } from '../App';\r\n\r\nconst InfoContainer = () => {\r\n\r\n\tconst { ipData } = useContext(TrackerContext);\r\n\r\n\treturn (\r\n\t\t<StyledInfoContainer>\r\n\t\t\t<div>\r\n\t\t\t\t<span>IP ADDRESS</span>\r\n\t\t\t\t<p>{ ipData.ip }</p>\r\n\t\t\t</div>\r\n\t\t\t<Line />\r\n\t\t\t<div>\r\n\t\t\t\t<span>LOCATION</span>\r\n\t\t\t\t<p>{ ipData.location.city }, { ipData.location.country }</p>\r\n\t\t\t\t<p>{ ipData.location.geonameId }</p>\r\n\t\t\t</div>\r\n\t\t\t<Line />\r\n\t\t\t<div>\r\n\t\t\t\t<span>TIME ZONE</span>\r\n\t\t\t\t<p>UTC { ipData.location.timezone }</p>\r\n\t\t\t</div>\r\n\t\t\t<Line />\r\n\t\t\t<div>\r\n\t\t\t\t<span>ISP</span>\r\n\t\t\t\t<p>{ ipData.isp }</p>\r\n\t\t\t</div>\r\n\t\t</StyledInfoContainer>\r\n\t)\r\n}\r\n\r\nexport default InfoContainer","import {StyledBackground, InputBox} from './styles/Background.styled';\r\nimport InfoContainer from './InfoContainer'\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport {TrackerContext} from '../App';\r\n\r\nconst Background = () => {\r\n\r\n\tconst { ipData, setIpData } = useContext(TrackerContext);\r\n\r\n\tconst [ ipQuery, setIpQuery ] = useState('');\r\n\r\n\t// const apiKey = 'at_THr1vS7ht5tAD4MZGa5HNyYa1qRM1';\r\n\r\n\t// Gets IP Address of the user\r\n\tconst getIp = async() => {\r\n\t\tawait fetch('https://geo.ipify.org/api/v2/country,city?apiKey=at_THr1vS7ht5tAD4MZGa5HNyYa1qRM1&ipAddress=').then(res => res.json()).then(data => {\r\n\t\t\tsetIpData(data);\r\n\t\t}).catch(err => console.log(err));\r\n\t}\r\n\r\n\tconst searchIp = async() => {\r\n\t\t// If there is no search input, it finds IP Address of user\r\n\t\tif (ipQuery === ' ') {\r\n\t\t\tgetIp();\r\n\t\t} else {\r\n\t\t\tawait fetch(`https://geo.ipify.org/api/v2/country,city?apiKey=at_THr1vS7ht5tAD4MZGa5HNyYa1qRM1&ipAddress=${ipQuery}`).then(res => res.json()).then(data => {\r\n\t\t\t\tsetIpData(data);\r\n\t\t\t}).catch(err => console.log(err));\r\n\t\t}\r\n\t}\r\n\r\n\t// Gets IP Address of the user when the page loads\r\n\tuseEffect(() => {\t\t\r\n\t\tgetIp();\r\n\t}, [ ])\r\n\r\n\r\n\treturn (\r\n\t\t<StyledBackground>\r\n\t\t\t<h1>IP Address Tracker</h1>\r\n\t\t\t<InputBox>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Search for any IP address or domain\" onChange={ (e) => setIpQuery(e.target.value) }/>\r\n\t\t\t\t<span onClick ={ searchIp }>\r\n\t\t\t\t\t<img src=\"images/icon-arrow.svg\" alt=\"arrow icon\"/>\r\n\t\t\t\t</span>\r\n\t\t\t</InputBox>\r\n       \t   { ipData && <InfoContainer /> } \r\n\t\t</StyledBackground>\r\n\t)\r\n}\r\n\r\nexport default Background","import styled from 'styled-components';\r\n\r\nexport const StyledMap = styled.div`\r\n\twidth: 100%;\r\n\tmin-height: 65vh;\r\n\r\n\timg {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 65vh;\r\n\t\tobject-fit: cover;\r\n\t}\r\n`;","import {StyledMap} from './styles/Map.styled';\r\n\r\nconst Map = () => {\r\n\r\n\treturn (\r\n\t\t<StyledMap>\r\n\t\t\t<img src=\"images/map.jpg\" alt=\"map\"/>\r\n\t\t</StyledMap>\r\n\t)\r\n}\r\n\r\nexport default Map\r\n","const theme = {\r\n  colors: {\r\n    text: 'hsl(0, 0%, 17%)',\r\n    lightText: 'hsl(0, 0%, 59%)',\r\n  },\r\n  mobile: '650px',\r\n  tablet: '768px',\r\n}\r\n\r\nexport default theme","import { createContext, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport {GlobalStyles} from './components/styles/Globals';\nimport Background from './components/Background';\nimport InfoContainer from './components/InfoContainer';\nimport Map from './components/Map';\nimport theme from './theme';\n\nexport const TrackerContext = createContext(null);\n\n\nfunction App() {\n  \n  const [ipData, setIpData] = useState(null);\n\n  return (\n    <TrackerContext.Provider value = {{ ipData, setIpData }}>\n      <ThemeProvider theme= { theme } >\n        <>\n          <GlobalStyles />\n          <Background />\n          { ipData && <Map /> }\n        </>\n      </ThemeProvider>\n    </TrackerContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}